name: Build and test

on:
  push:
    branches:
      - test-py310.1

jobs:

  linux:
    name: Build and test (Linux)
    runs-on: ubuntu-20.04
    env:
      CC: gcc-10
      CXX: g++-10
      PYTKET_SKIP_REGISTRATION: "true"
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: '0'
    - run: git fetch --depth=1 origin +refs/tags/*:refs/tags/*
    - name: Get current time
      uses: srfrnk/current-time@v1.1.0
      id: current_time
      with:
        format: YYYYMMDDHHmmss
    - name: Cache ccache data
      uses: actions/cache@v2
      with:
        path: ~/.ccache
        key: ${{ runner.os }}-tket-ccache-${{ steps.current_time.outputs.formattedTime }}
        restore-keys: |
          ${{ runner.os }}-tket-ccache-
    - name: apt update
      run: sudo apt update
    - name: Check doxygen
      if: github.event_name == 'pull_request'
      run: |
        sudo apt install -y doxygen graphviz
        cd tket && doxygen
    - name: Install conan
      id: conan
      run: |
        pip install conan
        conan_cmd=/home/runner/.local/bin/conan
        ${conan_cmd} profile new tket --detect
        ${conan_cmd} profile update settings.compiler.libcxx=libstdc++11 tket
        echo "CONAN_CMD=${conan_cmd}" >> $GITHUB_ENV
    - name: Install ninja and ccache
      run: sudo apt-get install ninja-build ccache
    - name: Build symengine
      run: ${CONAN_CMD} create --profile=tket recipes/symengine
    - name: Build tket
      run: ${CONAN_CMD} create --profile=tket recipes/tket
    - name: Install pybind11
      run: ${CONAN_CMD} create --profile=tket recipes/pybind11
    - name: Set up Python 3.7
      if: github.event_name == 'push'
      uses: actions/setup-python@v2
      with:
        python-version: "3.10"
    - name: Build pytket (3.10)
      run: |
        cd pytket
        pip install -e . -v
    - name: Test pytket (3.10)
      run: |
        python -c "from pytket import Circuit; c = Circuit(1).Rx(0.5, 0)"

  macos:
    name: Build and test (MacOS)
    runs-on: macos-11
    env:
      PYTKET_SKIP_REGISTRATION: "true"
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: '0'
    - run: git fetch --depth=1 origin +refs/tags/*:refs/tags/*
    - name: Check C++ code formatting
      if: github.event_name == 'pull_request'
      run: |
        brew update
        brew install clang-format@13
        git ls-files "*.cpp" "*.hpp" | xargs clang-format -style=file --dry-run --Werror
    - name: Get current time
      uses: srfrnk/current-time@v1.1.0
      id: current_time
      with:
        format: YYYYMMDDHHmmss
    - name: Cache ccache data
      uses: actions/cache@v2
      with:
        path: ~/Library/Caches/ccache
        key: ${{ runner.os }}-tket-ccache-${{ steps.current_time.outputs.formattedTime }}
        restore-keys: |
          ${{ runner.os }}-tket-ccache-
    - name: Cache conan data
      uses: actions/cache@v2
      with:
        path: ~/.conan
        key: ${{ runner.os }}-tket-conan-${{ steps.current_time.outputs.formattedTime }}
        restore-keys: |
          ${{ runner.os }}-tket-conan-
    - name: Install ninja and ccache
      run: brew install ninja ccache
    - name: Set up Python 3.10
      uses: actions/setup-python@v2
      with:
        python-version: "3.10"
    - name: Install conan
      id: conan
      run: |
        pip install conan
        conan profile new tket --detect --force
        export CC=`which conan`
        echo "CONAN_CMD=${CC}" >> $GITHUB_ENV
    - name: Install boost
      run: conan install --profile=tket boost/1.77.0@ --build=missing
    - name: Build symengine
      run: conan create --profile=tket recipes/symengine
    - name: Build tket
      run: conan create --profile=tket recipes/tket
    - name: Install pybind11
      run: conan create --profile=tket recipes/pybind11
    - name: Set up Python 3.10
      uses: actions/setup-python@v2
      with:
        python-version: "3.10"
    - name: Build pytket (3.10)
      run: |
        cd pytket
        pip install -e . -v
    - name: Test pytket (3.10)
      run: |
        python -c "from pytket import Circuit; c = Circuit(1).Rx(0.5, 0)"

  windows:
    name: Build and test (Windows)
    runs-on: windows-2019
    env:
      PYTKET_SKIP_REGISTRATION: "true"
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: '0'
    - name: Hash tket source
      id: hash_tket_source
      run: |
        Function Get-FolderHash
        {
            param ($folder)
            $files = dir $folder -Recurse |? { -not $_.psiscontainer }
            $allBytes = new-object System.Collections.Generic.List[byte]
            foreach ($file in $files)
            {
                $allBytes.AddRange([System.IO.File]::ReadAllBytes($file.FullName))
                $allBytes.AddRange([System.Text.Encoding]::UTF8.GetBytes($file.Name))
            }
            $hasher = [System.Security.Cryptography.MD5]::Create()
            $ret = [string]::Join("",$($hasher.ComputeHash($allBytes.ToArray()) | %{"{0:x2}" -f $_}))
            return $ret
        }
        $tket_hash = Get-FolderHash tket
        echo "::set-output name=tket_hash::${tket_hash}"
    - run: git fetch --depth=1 origin +refs/tags/*:refs/tags/*
    - name: Install conan
      run: |
        pip install conan
        conan profile new tket --detect
        $conan_cmd = (gcm conan).Path
        echo "CONAN_CMD=${conan_cmd}" >> $GITHUB_ENV
    - name: Cache tket build
      id: cache-tket
      uses: actions/cache@v2
      with:
        path: C:\Users\runneradmin\.conan\data\tket
        key: ${{ runner.os }}-tket-tket-${{ steps.hash_tket_source.outputs.tket_hash }}-13
    - name: Build symengine
      run: conan create --profile=tket recipes/symengine
    - name: Build tket
      if: steps.cache-tket.outputs.cache-hit != 'true'
      run: conan create --profile=tket recipes/tket
    - name: Install pybind11
      run: conan create --profile=tket recipes/pybind11
    - name: Set up Python 3.10
      uses: actions/setup-python@v2
      with:
        python-version: "3.10"
    - name: Build and test pytket (3.10)
      if: github.event_name == 'push'
      run: |
        cd pytket
        pip install -e . -v
        python -c "from pytket import Circuit; c = Circuit(1).Rx(0.5, 0)"
